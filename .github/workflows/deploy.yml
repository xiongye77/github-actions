# .github/workflows/control-deploy.yml
name: Control Deploy Workflow

on:
  push:
    branches:
      - github-action-api-gw-lambda-dynamodb
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:

  
  snyk-container-scan:
    name: Snyk Container Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        working-directory: ./.github/workflows/../.././infrastructure/k8s/
        run: |
          docker build -t snyk-scan-image:latest .

      - name: Run Snyk Container Scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: snyk-scan-image:latest
          args:  --severity-threshold=high
        continue-on-error: true
  sast:
    name: 'Static Code Analysis'
    needs: [snyk-container-scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'python' 
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  sca:
    name: 'Dependency Vulnerability Scan'
    runs-on: ubuntu-latest
    needs: [sast]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'MyProject'
          scan: '.'
          format: 'ALL'
          out: 'dependency-check-report'
          failOnCVSS: '7'  # Fail if vulnerabilities with CVSS >= 7 are found

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v3
        with:
          name: Dependency-Check Report
          path: dependency-check-report
  
  
  build-deploy-serverless:
    name: 'Build and Deploy Serverless Components'
    needs: [sca]
    uses: ./.github/workflows/build-deploy-serverless.yml
    with:
      aws_region: us-east-1
      role_to_assume: arn:aws:iam::582140066777:role/github-action-role  # Update with your role ARN
  
  #OWASP ZAP scan web site   
  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the web applications
    needs: [build-deploy-serverless]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.6.1
        with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://apigw-cdn.yexiongcodetest.com/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'


  integration-tests:
    name: 'Run Integration Tests'
    needs: [zap_scan]
    uses: ./.github/workflows/integration-tests.yml
    with:
      api_endpoint: ${{ needs.build-deploy-serverless.outputs.api_endpoint }}
      api_key: ${{ needs.build-deploy-serverless.outputs.api_key }}
