name: Deploy Serverless Application

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      role_to_assume:
        required: true
        type: string


permissions:
  id-token: write  # Required for OIDC authentication
  contents: read   # Provides access to repository contents

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install AWS SAM CLI
      - name: Install AWS SAM CLI
        run: |
          pip install aws-sam-cli
      
      - name: Install dependencies
        run: |
          # Example for Python Lambda functions
          pip install toml

          
      - name: Extract S3 Bucket Name and AWS Region
        id: extract_s3_bucket_aws_region
        run: |
         s3_bucket=$(python -c 'import toml; config = toml.load("infrastructure/samconfig.toml"); print(config["default"]["global"]["parameters"]["s3_bucket"])')
         echo "s3_bucket=${s3_bucket}" >> $GITHUB_OUTPUT
         aws_region=$(python -c 'import toml; config = toml.load("infrastructure/samconfig.toml"); print(config["default"]["global"]["parameters"]["region"])')
         echo "aws_region=${aws_region}" >> $GITHUB_OUTPUT
         
         cat $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::582140066777:role/github-action-role
          aws-region: ${{ steps.extract_s3_bucket_aws_region.outputs.aws_region }}

      - name: Create S3 Bucket
        run: |
          BUCKET_NAME="${{ steps.extract_s3_bucket_aws_region.outputs.s3_bucket }}"
          aws s3api head-bucket --bucket $BUCKET_NAME 2>/dev/null
          EXIT_CODE=$?

          if [ $EXIT_CODE -eq 0 ]; then
              echo "Bucket '$BUCKET_NAME' exists and you have access."
          else
              echo "Bucket '$BUCKET_NAME' does not exist or you do not have access."
              aws s3 mb s3://${{ steps.extract_s3_bucket_aws_region.outputs.s3_bucket }} --region ${{ steps.extract_s3_bucket_aws_region.outputs.aws_region }}
          fi
          
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: my-output

      - name: Read the output
        run: |
          cat output.txt
          lb_dns_name=$(cat  output.txt | cut -d' ' -f1)

      - name : Validate the SAM application
        run: |
          sam validate --template-file infrastructure/template.yaml
          
      # Step 5: Build the SAM application
      - name: Build SAM Application
        run: |
          cat output.txt
          lb_dns_name=$(cat  output.txt | awk -F '=' '{print $2}')
          sam build --template-file infrastructure/template.yaml 

      # Step 6: Deploy the SAM application
      - name: Deploy SAM Application
        run: |
          lb_dns_name=$(cat  output.txt | awk -F '=' '{print $2}')
          sam deploy --config-file infrastructure/samconfig.toml --parameter-overrides ParameterKey=DNSName,ParameterValue=$lb_dns_name

